constants:
  file:
    upload-directory: D:\student\heeJin\back\upload\gram
  jwt:
    issuer: green502@green.com #??? ??
    bearer-format: JWT

    claim-key: signedUser
    secret-key: DaeguGreenArtAcademyClass502MsaClassFightingkkkkkk

    access-token-cookie-name: access-token
    access-token-cookie-path: / #?? ???? ??? ???
    access-token-cookie-validity-seconds: 900 # 15? (s) 60 * 15
    access-token-validity-milliseconds: 900_000 # 15? (ms) 60 * 15 * 1000

    refresh-token-cookie-name: refresh-token
    refresh-token-cookie-path: /api/v1/account/reissue #?? ??? ?? ??? ???
    refresh-token-cookie-validity-seconds: 1_296_000 # 15? (s) 60 * 60 * 24 * 15
    refresh-token-validity-milliseconds: 1_296_000_000 # 15? (ms) 60 * 60 * 24 * 15 * 1000


spring:
  application:
    name: greengram
  datasource:
    url: jdbc:log4jdbc:mariadb://localhost/greengram
    username: root
    password: green502
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
  jpa:
    database: mysql
    hibernate:
      ddl-auto: create #테이블이 없는 entity가 존재하면 create한다.
    #          ddl-auto: create #프로젝트 실행시마다 테이블을 모두 drop후 다시 만든다.
    properties:
      hibernate:
        jdbc:
          batch_size: 20
        format_sql: true # 쿼리문 로그를 찍어줄 때 보기 편하게 포맷팅
        order_updates: true # batch 작업 시 필요
        show_sql: true
    defer-datasource-initialization: true #jpa 테이블 생성 이후 data.sql
  servlet:
    multipart:
      max-file-size: 15MB
  sql:
    init:
      mode: always
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: mappers/**/*.xml